"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var express_1 = require("express");
var aptitude_controller_1 = require("../controllers/aptitude.controller");
var auth_middleware_1 = require("../middlewares/auth.middleware");
var aptitudeRouter = express_1.default.Router();
aptitudeRouter.post('/create', auth_middleware_1.verifyJwt, auth_middleware_1.adminAccess, aptitude_controller_1.default.createAptitude);
aptitudeRouter.get('/', auth_middleware_1.verifyJwt, aptitude_controller_1.default.getAptitude);
aptitudeRouter.delete('/:id', auth_middleware_1.verifyJwt, auth_middleware_1.adminAccess, aptitude_controller_1.default.deleteAptitude);
aptitudeRouter.put('/:id', auth_middleware_1.verifyJwt, auth_middleware_1.adminAccess, aptitude_controller_1.default.updateAptitude);
aptitudeRouter.get('/upcoming', auth_middleware_1.verifyJwt, aptitude_controller_1.default.getUpcomingAptitudes);
aptitudeRouter.get("/past", aptitude_controller_1.default.getPastAptitudes);
aptitudeRouter.get('/:id', auth_middleware_1.verifyJwt, auth_middleware_1.adminAccess, aptitude_controller_1.default.getAptitudeById);
aptitudeRouter.put('/add-questions/:id', auth_middleware_1.verifyJwt, auth_middleware_1.adminAccess, aptitude_controller_1.default.addQuestionsToAptitude);
aptitudeRouter.post('/question/delete', auth_middleware_1.verifyJwt, auth_middleware_1.adminAccess, aptitude_controller_1.default.deleteQuestionFromAptitude);
aptitudeRouter.post('/appear/:id', aptitude_controller_1.default.getAptitudeForUser);
aptitudeRouter.post('/submit/:id', aptitude_controller_1.default.submitAptitude);
aptitudeRouter.get("/responses/:id", auth_middleware_1.verifyJwt, auth_middleware_1.adminAccess, aptitude_controller_1.default.getAptitudeResponses);
aptitudeRouter.get("/user/response/:id", auth_middleware_1.verifyJwt, aptitude_controller_1.default.getUserApitudeResponse);
aptitudeRouter.get("/toppers/:id", aptitude_controller_1.default.getAptitudeToppers);
exports.default = aptitudeRouter;
